                    ПОСЛЕДОВАТЕЛЬНОСТЬ ВЫПОЛНЕНИЯ ПРОГРАММЫ

    Вызывающий (calling) метод запускает вызываемый (worker). Далее происходят действия:
        - Вызываемый метод выполняет свои инструкции;
        - Вызваемый метод завершает своё выполнение и передаёт управление
            вызвающему методу;
    Если происходит ошибка (возникает исключение), происходит одно из двух:
        - либо специальный объект передаётся локальному блоку инструкций, который
            выполняет обработку ошибки;
        - либо локально ошибка не обрабатывается и управление (и ошибка) передаётся
            вызываемому методу.


                    ЧТО ТАКОЕ ИСКЛЮЧЕНИЕ (EXCEPTION)?

    Термин "исключение" (exception) сокращение от фразы "исключительное событие"
        (exceptional event).
    Исключение - это событие, которое происходит во время выполнения программы,
        прерывающее нормальное выполнение инструкций программы.
    В случае возникновения ошибки во время выполнения инструкций, метод создаёт
        специальный объект, называемый "объектом исключения" (exception object).
    Объект исключения содержит информацию об ошибке, включая её тип и состояние
        программы в момент возникновения ошибки.
    Создание "объекта исключения" и передача его системе выполнения программы
        называется "выбросом исключения" (throwing an exception).


                    ИЕРАРХИЯ ИСКЛЮЧЕНИЙ В JAVA

    Все типы исключений наследуются от класса Throwable. Существует три основных
        подкласса Throwable:

        - Error - обычно не восствнавливаемая ошибка ОС или JVM, является не
            проверяемым (Unchecked);

        - RuntimeException - обычно результат некорректного программирования,
            является не проверяемым (Unchecked) исключением;

        - Exception - возможно восстановить нормальную работу программы при
            возникновении подобной ошибки, является проверяемым (Checked)
            исключением.


                    ПРОВЕРЯЕМЫЕ И НЕПРОВЕРЯЕМЫЕ ИСКЛЮЧЕНИЯ

    Классы Java Error и RuntimeException (а также их подклассы) называются
        непроверяемыми исключениями (unchecked exceptions), т.е. в общем случае
        возникновение этих ситуаций невозможно заранее предположить.

    Непроверяемые исключения могут возникнуть и быть выброшены в любой момент
        выполнения программы.

    При описании методов нет необходимости явно описывать, что при выполнении могут
        возникать непроверяемые исключения.

    Вызываемые методы не обязаны явно обрабатывать непроверяемые исключения.


                    ПРОВЕРЯЕМЫЕ ИСКЛЮЧЕНИЯ - "catch or specify"

    Обрабатываемые (checked) исключения являются подклассами java.lang.Exception, но
        не класса java.lang.RuntimeException.

    Обрабатываемые исключения должны
        соответствовать спецификации "catch or specify", т.е. необходимо:
            - либо обработать исключение в текущем методе;
            - либо передать его на обработку вызывающему методу;

    Для обработки исключения в текущем методе необходимо использовать конструкцию
        try/catch.

    Для передачи проверяемого исключения вызывающему методу используется ключевое
        слово throws при объявлении метода.


                    КОНСТРУКЦИЯ try/catch

    Блок "try" окружает код, в котором может возникнуть исключение.

    Один или несколько блоков catch следуют сразу за блоком try.

    В круглых скобках блока catch в качестве аргумента указывается тип исключения,
        обрабатываемого в данном блоке. Этот тип должен быть подклассом Throwable.

    После возникновения исключения, в порядке следования просматриваются catch блоки
        и выполняется первый catch, в котором указан соответствующий тип.

    Внутри блоков catch выполняется обработка ошибки.